;;-*-Scheme-*-
;; pqlib.stub - pq driver stub
;;
;;  Copyright (c) 2003-2005 Scheme Arts, L.L.C., All rights reserved.
;;  Copyright (c) 2003-2005 Time Intermedia Corporation, All rights reserved.
;;  See COPYING for terms and conditions of using this software
;;
;; $Id: gauche_dbd_pglib.stub,v 1.1 2005/07/19 00:45:42 shiro Exp $

"
#include \"gauche_dbd_pg.h\"
"

(define-cproc pq-connectdb
  (conninfo::<string> &optional connection)
  "SCM_RETURN(Scm_PqConnectdb(conninfo, connection));")

(define-cproc pq-exec
  (query::<string> &optional connection result)
  "SCM_RETURN(Scm_PqExec(query, connection, result));")

;; ConnStatusType from libpq-fe.h
(define-enum CONNECTION_OK)
(define-enum CONNECTION_BAD)
(define-enum CONNECTION_STARTED)
(define-enum CONNECTION_MADE)
(define-enum CONNECTION_AWAITING_RESPONSE)
(define-enum CONNECTION_AUTH_OK)
(define-enum CONNECTION_SETENV)
(define-enum CONNECTION_SSL_STARTUP)
(define-enum CONNECTION_NEEDED)

;; ExecStatusType from libpq-fe.h
(define-enum PGRES_EMPTY_QUERY)
(define-enum PGRES_COMMAND_OK)
(define-enum PGRES_TUPLES_OK)
(define-enum PGRES_COPY_OUT)
(define-enum PGRES_COPY_IN)
(define-enum PGRES_BAD_RESPONSE)
(define-enum PGRES_NONFATAL_ERROR)
(define-enum PGRES_FATAL_ERROR)

(define-cproc pq-status
  (&optional connection)
  "SCM_RETURN(Scm_PqStatus(connection));")

(define-cproc pq-result-status
  (&optional result)
  "SCM_RETURN(Scm_PqResultStatus(result));")

(define-cproc pq-result-error-message
  (&optional result)
  "SCM_RETURN(Scm_PqResultErrorMessage(result));")

(define-cproc pq-ntuples
  (&optional result)
  "SCM_RETURN(Scm_PqNtuples(result));")

(define-cproc pq-nfields
  (&optional result)
  "SCM_RETURN(Scm_PqNfields(result));")

(define-cproc pq-get-value (row_id::<int> col_id::<int> &optional result)
  "SCM_RETURN(Scm_PqGetValue(row_id, col_id, result));")

(define-cproc pq-finish(&optional connection)
  "SCM_RETURN(Scm_PqFinish(connection));")
